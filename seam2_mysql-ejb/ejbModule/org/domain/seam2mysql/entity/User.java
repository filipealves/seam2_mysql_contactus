package org.domain.seam2mysql.entity;
// Generated 27/Fev/2012 17:12:47 by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.security.management.*;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="test"
)
public class User  implements java.io.Serializable {


     private String user;
     private String pass;
     private Set<Role> roles = new HashSet<Role>(0);

    public User() {
    }

	
    public User(String user, String pass) {
        this.user = user;
        this.pass = pass;
    }
    public User(String user, String pass, Set<Role> roles) {
       this.user = user;
       this.pass = pass;
       this.roles = roles;
    }
   
     @Id 

    
    @Column(name="user", unique=true, nullable=false, length=100)
    @NotNull
    @Length(max=100)
    @UserPrincipal
    public String getUser() {
        return this.user;
    }
    
    public void setUser(String user) {
        this.user = user;
    }

    
    @Column(name="pass", nullable=false, length=100)
    @NotNull
    @Length(max=100)
    @UserPassword(hash = "none")
    public String getPass() {
        return this.pass;
    }
    
    public void setPass(String pass) {
        this.pass = pass;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_role", catalog="test", joinColumns = { 
        @JoinColumn(name="user", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="role_id", nullable=false, updatable=false) })
	@UserRoles
    public Set<Role> getRoles() {
        return this.roles;
    }
    
    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }




}


